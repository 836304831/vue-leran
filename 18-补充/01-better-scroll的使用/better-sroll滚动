
better-scroll对滚动场景有较好的性能和更多的特性，参考iscroll


1. 安装
npm install better-scroll --save

2. 规则说明
    - 必须是在div中，
    - div中必须只有一个标签（标签下可以包含多个元素，如例子）

    - 要监听scroll中的按钮点击事件，需要有相应的参数配置，如下
        // probeType参数
        // 0, 1 都是不政策实时的位置，0是系统默认值，1是手动默认值
        // 2: 在手指滚动的过程中检测，手指离开后的关心滚动过程中不侦测
        // 3： 只要是滚动都侦测
        const bscrol = BetterScroll.createBScroll('.content', {
            probeType: 3,
            click: true,  // 监听内部点击事件
            autoPullUpLoad: true  // 上拉加载更多
        })
        // 监听滚动的位置
        bscrol.on(
            'scroll', (position) => {
                // console.log(position);
            }
        )

        // 监听上拉加载更多， 版本不一样，接口有所不同
        bscrol.on(
            'pullingUp', () => {
                console.log('pullingUp。。。。。。');
                // 发送网络请求，请求更多也的数据
                // 等数据请求完成，并且将新的数据展示出来后
                // 调用该接口后，可以多次加载，否则只会调用一次
                bscrol.finishPullUp()
        })

        // 添加按钮点击事件监听
        document.querySelector('.btn').addEventListener('click', function () {
            console.log('-----');
        })
3. 使用：
    <template>
      <div class="wrapper">
        <ul class="content">
          <li>分类</li>
          <li>分类</li>
        </ul>
      </div>
    </template>

    <script>
      import BScroll from 'better-scroll'
      export default {
        name: "Category",
        mounted() {
          new BScroll('.wrapper', {

          })
        }
      }
    </script>

    <style scoped>
      .wrapper {
        height: 150px;
        background-color: pink;

        /* 原生滚动条使用方式 */
        /*overflow: hidden;*/
        /*overflow-y: scroll;*/
      }
    </style>


4. 源码方式使用index.html
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <style>
        .content {
            height: 200px;
            background-color: pink;
            /*overflow: hidden;*/
        }
    </style>
</head>
<body>

<div class="content">
    <ul>
        <li>分类</li>
        <li>分类</li>
    </ul>
</div>

<script src="./better-scroll.js">
</script>

<script>
    const bscrol = BetterScroll.createBScroll('.content', {
    })
</script>
</body>
</html>

5. 监听滚动位置：
    // probeType参数
    // 0, 1 都是不政策实时的位置，0是系统默认值，1是手动默认值
    // 2: 在手指滚动的过程中检测，手指离开后的关心滚动过程中不侦测
    // 3： 只要是滚动都侦测
    const bscrol = BetterScroll.createBScroll('.content', {
        probeType: 3,
        click:
    })
    bscrol.on(
        'scroll', (position) => {
            console.log(position);
        }
    )
